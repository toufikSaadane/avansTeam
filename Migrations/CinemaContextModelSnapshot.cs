// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using avansTeam.Data;

#nullable disable

namespace avansTeam.Migrations
{
    [DbContext(typeof(CinemaContext))]
    partial class CinemaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("avansTeam.Models.Hall", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                b.Property<string>("Name")
                    .HasColumnType("longtext");

                b.Property<int>("Seats")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.ToTable("Halls");

                b.HasData(
                   new
                   {
                       Id = 1,
                       Name = "zaal 1",
                       Seats = 180
                   },
                   new
                   {
                       Id = 2,
                       Name = "zaal 2",
                       Seats = 180
                   },
                   new
                   {
                       Id = 3,
                       Name = "zaal 3",
                       Seats = 180
                   },
                   new
                   {
                       Id = 4,
                       Name = "zaal 4",
                       Seats = 180
                   },
                   new
                   {
                       Id = 5,
                       Name = "zaal 5",
                       Seats = 180
                   });
            });

            modelBuilder.Entity("avansTeam.Models.Movie", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                b.Property<string>("Description")
                    .HasColumnType("longtext");

                b.Property<int>("Duration")
                    .HasColumnType("int");

                b.Property<string>("Image")
                    .HasColumnType("longtext");

                b.Property<int>("MinimalAge")
                    .HasColumnType("int");

                b.Property<string>("Name")
                    .HasColumnType("longtext");

                b.HasKey("Id");

                b.ToTable("Movies");

                b.HasData(
                   new
                   {
                       Id = 1,
                       Name = "Spider-Man: No Way Home",
                       Description = "Voor de allereerste keer in de geschiedenis van de Spider-Man films is onze vriendelijke superheld ontmaskerd en kan hij zijn normale leven niet langer gescheiden houden van zijn gevaarlijke leven als superheld.",
                       MinimalAge = 12,
                       Duration = 148,
                       Image = "https://media.pathe.nl/nocropthumb/180x254/gfx_content/Spider-Man_-No-Way-Home_ps_1_jpg_sd-high_Copyright-MARVEL-2021-CPII-All-Rights-Reserved.jpg"
                   },
                    new
                    {
                        Id = 2,
                        Name = "Blacklight",
                        Description = "Verborgen geheimen en het gevaar van macht pushen een geheim agent tot het randje in de intense actiethriller Blacklight. Travis Block (Liam Neeson) is freelance ‘fixer’ voor de FBI.",
                        MinimalAge = 12,
                        Duration = 120,
                        Image = "https://media.pathe.nl/nocropthumb/180x254/gfx_content/other/api/filmdepot/v1/movie/download/33695_146276_ps_sd-high.jpg"
                    },
                    new
                    {
                        Id = 3,
                        Name = "The Batman",
                        Description = "Het is meer dan een oproep… Het is een waarschuwing. Warner Bros. Pictures presenteert The Batman van regisseur Matt Reeves, met in de hoofdrol Robert Pattinson als Gotham City’s bekende misdaadbestrijder en zijn alter ego, de teruggetrokken miljardair Bruce Wayne.",
                        MinimalAge = 12,
                        Duration = 159,
                        Image = "https://media.pathe.nl/nocropthumb/180x254/gfx_content/The-Batman_ps_1_jpg_sd-high_2021-Warner-Bros-Entertainment-Inc-All-Rights-Reserved-Photo-Credit-Courtesy-of-Warner-Bros-Pictures-DC-Comics.jpg"
                    },
                    new
                    {
                        Id = 4,
                        Name = "Jackass Forever",
                        Description = "Weer samen zijn met je beste vrienden, dat is net zo mooi als een perfect uitgevoerde trap in de ballen. De jongens van Jackass keren terug met opnieuw een hele lading hilarische, extreme, absurde en vaak levensgevaarlijke stunts.",
                        MinimalAge = 12,
                        Duration = 90,
                        Image = "https://media.pathe.nl/nocropthumb/180x254/gfx_content/Jackass-Forever_ps_1_jpg_sd-high_Copyright-2021-Paramount-Pictures-All-Rights-Reserved.jpg"
                    });
            });

            modelBuilder.Entity("avansTeam.Models.Performance", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                b.Property<int>("HallId")
                    .HasColumnType("int");

                b.Property<int>("MovieId")
                    .HasColumnType("int");

                b.Property<DateTime>("startTime")
                    .HasColumnType("datetime");

                b.HasKey("Id");

                b.HasIndex("HallId");

                b.HasIndex("MovieId");

                b.ToTable("Performances");
            });

            modelBuilder.Entity("avansTeam.Models.Performance", b =>
            {
                b.HasOne("avansTeam.Models.Hall", "Hall")
                    .WithMany("Perfomances")
                    .HasForeignKey("HallId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("avansTeam.Models.Movie", "Movie")
                    .WithMany("Perfomances")
                    .HasForeignKey("MovieId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Hall");

                b.Navigation("Movie");
            });

            modelBuilder.Entity("avansTeam.Models.Hall", b =>
            {
                b.Navigation("Perfomances");
            });

            modelBuilder.Entity("avansTeam.Models.Movie", b =>
            {
                b.Navigation("Perfomances");
            });
#pragma warning restore 612, 618
        }
    }
}
